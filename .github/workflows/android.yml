name: android ci

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  code_linting:
    runs-on: ubuntu-latest
    steps:
      - name: checkout project sources
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          check-latest: true
          cache: gradle

      # KtLint
      - name: run ktlintCheck
        run: ./gradlew ktlintCheck
      - name: archive ktLint reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: code_linting
          path: "**/build/reports/ktLint/ktlintMainSourceSetCheck.*"

  unit_tests:
    needs: code_linting
    runs-on: ubuntu-latest
    steps:
      - name: checkout project sources
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          check-latest: true
          cache: gradle

      # Run unit tests: https://developer.android.com/studio/test/command-line#run-tests-build-variants
      - name: run unit tests
        run: ./gradlew testDebugUnitTest

      - name: archive unit tests
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: unit_tests
          path: "**/build/reports/tests/testDebugUnitTest"

  ui_tests:
    runs-on: macos-latest
    strategy:
      matrix:
        api-level: [ 29 ]
        target: [ google_apis ]
    steps:
      - name: checkout project sources
        uses: actions/checkout@v3

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          check-latest: true
          cache: gradle

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "generated avd snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          profile: Pixel 4
          ram-size: 8192M
          # Emulator build version: https://developer.android.com/studio/emulator_archive
          emulator-build: 9751036
          force-avd-creation: false
          # Emulator options reference: https://developer.android.com/studio/run/emulator-commandline
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          # Run ui tests: https://developer.android.com/studio/test/command-line#run-tests-build-variants
          script: ./gradlew connectedDebugAndroidTest

      - name: archive ui test reports
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: ui_tests
          path: "**/build/reports/androidTests/connected/"